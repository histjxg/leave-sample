参考地址：
    https://blog.csdn.net/qq_37886086/article/details/90725931
代码地址：https://github.com/ouyangxizhu/algorithmic_interview_clearance
视频地址：
链接：https://pan.baidu.com/s/1DY44wS3EJXrJYlSuNS0eMA
提取码：4wel
01。为什什么要掌握算法与数据结构
    原因一：编程的内功修炼
    原因二：去国内⼀一流互联⽹网公司的必要条件
        1。快⼿手、头条(抖⾳音)、Airbnb Beijing、Snapchat深圳
        2。微信、地平线机器器⼈人、第四范式、⼩小⽶米、Musically、Face++
        3。BAT、微软、Google、⼩小红书、饿了了么、⽹网易易等等
        4。新美⼤大、滴滴等
    原因三：硅⾕谷互联⽹网公司⾯面试更更 是要求当场写算法题⽬目
        1。电话面试
        2。现场面试
    原因四：
        算法和数据结构 是有趣且实⽤用的
        区块链的应用：

    算法在⽣生活中的应⽤用
        1。找⼥女女朋友
        2。⼯工作⽇日程规划
        3。扑克游戏
        4。加密货币，⽐比如⽐比特币等等


02如何有效学习和训练算法和数据结构
    -- Data Structure --
        1。Array
        2。Stack / Queue
        3。PriorityQueue
        4。LinkedList
        5。Queue / Priority queue
        6。Stack
        7。Tree / Binary Search Tree
        8。HashTable
        9。Disjoint Set
        10。Trie
        11。BloomFilter
        12。LRU Cache
    -- Algorithm --
        1。Greedy
        2。Recursion/Backtrace
        3。Traversal
        4。Breadth-first/Depth-first search
        5。Divide and Conquer
        6。Dynamic ProgrammingBinary Search
        7。Graph
    -- System Design —-
        1。System architecture overview
        2。Design+ scalability + flexibility
        3。Typical system design questions
    精通⼀一个领域
        1。Chunk it up(切碎知识点)
            1。庖丁解⽜牛
            2。脉络连接
            例子：
                1。控兵(微操)
                2。运营
                3。战术
                4。热键操作 vs ⿏鼠标操作
                5。等等等
        2。Deliberate practicing(刻意练习)
            1。刻意练习
            2。练习缺陷、不不舒服、弱点地⽅方
            3。不不爽、枯燥
            4。⽣生活中例例⼦子:乒乓球、台球、游戏等等
        3。Feedback(获得反馈)
            1。即时反馈
            2。主动型反馈(⾃自⼰己去找)
                1。⾼高⼿手代码 (GitHub, LeetCode, etc.)
                2。第⼀一视⻆角直播
            3。被动式反馈(⾼高⼿手给你指点)
                1。code review
                2。教练看你打，给你反馈

    切题四件套
        1。Clarification 分析，
        2。Possible solutions
            - compare(time/space)
            - optimal(加强)
        3。Coding(多写)
        4。Test cases

03。课程总览
    -- Data Structure --
        1。Array
        2。Stack / Queue
        3。PriorityQueue (heap)
        4。LinkedList (single / double)
        5。Tree / Binary Tree
        6。Binary Search Tree
        7。HashTable
        8。Disjoint Set
        9。Trie
        10。BloomFilter
        11。LRU Cache

    -- Algorithm --
        1。General Coding
        2。In-order/Pre-order/Post-order traversal
        3。Greedy
        4。Recursion/Backtrace
        5。Breadth-first search
        6。Depth-first search
        7。Divide and Conquer
        8。Dynamic Programming
        9。Binary Search
        10。Graph
    Big O notation
    -- What is Big O? --
        O(1): Constant Complexity: Constant 常数复杂度
            例子一：
                int n = 1000;
                System.out.println("Hey - your input is: " + n);

            例子二：
                int n = 1000;
                System.out.println("Hey - your input is: " + n);
                System.out.println("Hmm.. I'm doing more stuff with: " + n);
                System.out.println("And more: " + n);
        O(log n): Logarithmic Complexity: 对数复杂度
            例子：
                for (int i = 1; i < n; i = i * 2) {
                    System.out.println("Hey - I'm busy looking at: " + i);
                }
        O(n): Linear Complexity: 线性时间复杂度
            例子：
                for (int = 1; i<=n; i++) {
                    System.out.println(“Hey - I'm busy looking at: " + i);
                }
        O(n^2): N square Complexity 平⽅方
            例子：
                for (int i = 1; i <= n; i++) {
                    for (int j = 1; j <=n; j++) {
                        System.out.println("Hey - I'm busy looking at: " + i + " and " + j);
                    }
                }

        O(n^3): N square Complexity ⽴立⽅方
        O(2^n): Exponential Growth 指数
            例子：
                for (int i = 1; i <= Math.pow(2, n); i++){
                    System.out.println("Hey - I'm busy looking at: " + i);
                }
        O(n!): Factorial 阶乘
            例子：
                for (int i = 1; i <= factorial(n); i++){
                    System.out.println("Hey - I'm busy looking at: " + i);
                }
04。Deliberate Practicing
    1。坚持、刻意练习
    2。练习缺陷、弱点地⽅方
    3。不舒服、不爽、枯燥
    LeetCode
        https://leetcode.com/problemset/all/
        思路：
            第一个：数据范围
            第二个：所有的解法：找最佳的过程
                时间复杂度
                空间复杂度
                查询一个数是否在数组中存在，可以通过set或者hash这样的结构
            第三个：多写
            第四个：测试案例
    Feedback!!!
        1。Solutions from LeetCode
        2。Discussion Panel in LeetCode
    关键的关键!
        1。现在就动⼿手
        2。注册LeetCode
        3。练习 - 坚持 - 机会给予有准备的⼈人
        4。每节课的课后作业
05。数组、链表(Array、Linked List)
    数组：
        Access: O(1)
        • Insert: 平均 O(n)
        • Delete: 平均 O(n)
    链表：
        space O(n)
        prepend O(1)
        append O(1)
        lookup O(n)
        insert O(1)
        delete O(1)
06。面试题-反转一个单链表&判断链表是否有环
